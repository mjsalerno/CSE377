#!/usr/bin/perl
#--------------------
#q1.pl
use strict;
use warnings;

print "Enter a string: ";
my $str = <>;

print "How many times do you want to print it? ";
my $n = <>;

for ( ; $n > 0; $n-- ) {
    print "$str";
}
#!/usr/bin/perl
#--------------------
#q2_a.pl
use strict;
use warnings;

for ( my $i = 1; $i < 33; $i++ ) {
    printf( "%5d %5d %5d\n", "$i", $i * 2, $i * $i );
}
#!/usr/bin/perl
#--------------------
#q2_b.pl
use strict;
use warnings;

foreach my $i ( 1 .. 32 ) {
    printf( "%5d %5d %5d\n", "$i", $i * 2, $i * $i );
}
#!/usr/bin/perl
#--------------------
#q3.pl
use strict;
use warnings;

print "How many lines: ";
my $n = <>;

my @lines;

for ( my $i = 0; $i < $n; $i++ ) {
    print "Enter a line: ";
    my $str = <>;
    chomp($str);
    push( @lines, $str );
}

do {

    my $val = pop(@lines);
    print "$val\n";
    $n--;

} until ( $n == 0 );
#!/usr/bin/perl
#--------------------
#q4.pl
use strict;
use warnings;

use constant PI => 3.141593;

#area = Pi * r *r
#circ = Pi * d
sub circle_stats {
    my $r = $_[0];
    my $a = PI * $r * $r;
    my $d = 2 * $r;
    my $c = PI * $d;

    return wantarray ? ( $a, $d, $c ) : $a;
}

print "enter a radius: ";
my $n = <>;

my $a = circle_stats($n);
my @l = circle_stats($n);

print "just scaler: $a\n";
print "a list: @l\n";
#!/usr/bin/perl
#--------------------
#q5.pl
use strict;
use warnings;

my %map;

while (<>) {
    chomp;
    my @line = split( ' ', $_ );

    foreach my $word (@line) {

        if ( !exists $map{$word} ) {
            $map{$word} = 0;
        }

        $map{$word} = $map{$word} + 1;
    }
}

print "\n--------------------\n";
print "$_ $map{$_}\n" for ( keys %map );
print "\n";
#!/usr/bin/perl
#--------------------
#q6.pl
use strict;
use warnings;

print "Enter the name of the file: ";
my $fname = <>;
chomp($fname);

open FILE, "< $fname";

while ( my $line = <FILE> ) {
    chomp($line);

    $line =~ s/^\d+\s//;

    print "$line\n";
}

close(FILE);
#!/usr/bin/perl
#--------------------
#q7.pl
use strict;
use warnings;

my $fname = $ARGV[0];
my $n     = $ARGV[1];
my $count = 0;
my $group = 1;
my %names;

# for (my $i = 1; $i <= $n; $i++) {
# 	$names{$i} = [];
# }

open FILE, "< $fname";
while ( my $line = <FILE> ) {
    chomp($line);
    if ( $count == $n ) {
        $count = 0;
        $group++;
        $names{$group} = [];
    }
    push( @{ $names{ ($group) } }, $line );
    $count++;
}

for my $key ( keys %names ) {
    my @value = $names{$key};
    print "Group Number: $key\n";

    foreach my $x ( @{ $names{$key} } ) {
        print "$x\n";
    }
    print "\n";
}
#!/usr/bin/perl
#--------------------
#q8.pl
use strict;
use warnings;

sub corse_title {
    my @c     = @{ $_[0] };
    my $index = $_[1] - 1;
    my $cname = $_[2];

    if ( !exists $c[$index]{$cname} ) {
        return "Unknown course";
    }
    else {
        return "$c[$index]{$cname}";
    }
}

my %y1 = (
    110, "Introduction to Computer Science",
    114, "Computer Science I",
    130, "Introduction to Programmingin C"
);
my %y2 = (
    214, "Computer Science II", 219, "Computer Science III",
    220, "Systems-Level Programming"
);
my %y3 = (
    303, "Introduction to the Theory of Computation",
    306, "Operating Systems",
    320, "Computer Organization and Architecture"
);

my @classes = [ \%y1, \%y2, \%y3 ];

print corse_title( @classes, 1, 114 ), "\n";
print corse_title( @classes, 2, 220 ), "\n";
print corse_title( @classes, 3, 320 ), "\n";
print corse_title( @classes, 2, 214 ), "\n";
print corse_title( @classes, 3, 306 ), "\n";
print corse_title( @classes, 2, 306 ), "\n";
