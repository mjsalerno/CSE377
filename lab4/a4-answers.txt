Michael Salerno                                                                                                                      ID: 108512298


1)
	1.	Multitasking means that one user can run many programs at once.
		Multiuser means that there can be more than one user on the computer. (they don't have to be on at the same time)
		So one users files can not be changed to any other users without permission. Linux is a multiuser operating system
		because you can see that when we use the who command there are many people logged in.
		there are also file permissions that don't allow other users to edit other users files.

	2.	Two systems programs: Linux and Windows
		Two application programs: Sublime Text and wireshark, OS is Fedora Linux

	3.	Three UNIX variants: Linux, BSD, GNU Hurd
		Three Linux Distributions: Fedora, Arch, Slackware

2)
	1.	When you first login it puts you in csh (env says SHELL=/bin/csh)
		but I type bash to use bash instead.

	2.	You can use the date command in both bash and csh

	3.	I was born on Dec 27th, 1990
		I used the command 'cal 1990 -m dec' and it prints out a calender
		for the month of December in the year of 1990.
		I was born on a Thursday.

	4.	ssh <username>@<hostname> -p <port>

3)
	1.	
		There are eight immediate subdirectories 
		'ls -l'
		total 112
		drwxr-xr-x   2 root root 36864 2014-04-09 13:29 bin
		drwxr-xr-x   2 root root  4096 2011-10-12 10:29 games
		drwxr-xr-x  35 root root  4096 2011-10-12 10:30 include
		drwxr-xr-x 190 root root 36864 2014-04-09 13:26 lib
		drwxr-xr-x  11 root root  4096 2014-04-08 21:14 local
		drwxr-xr-x   2 root root 12288 2014-04-22 15:00 sbin
		drwxr-xr-x 289 root root 12288 2014-04-08 10:58 share
		drwxr-xr-x   4 root root  4096 2011-10-12 10:30 src

		there are 12305 total subdirectories
		'ls -lR | grep total | wc'
		 12305   24615  105825

	2.	
		'mkdir dir1 dir2 dir3'
		'ls -l'
		total 12
		drwxr-xr-x 2 mijsalerno fuse 4096 2014-04-24 12:52 dir1
		drwxr-xr-x 2 mijsalerno fuse 4096 2014-04-24 12:52 dir2
		drwxr-xr-x 2 mijsalerno fuse 4096 2014-04-24 12:52 dir3

		this means the owner can read, write, or execute the file
		users in the same group as me can only execute and read
		everyone else can only execute

	3.	
		'echo hello > hi'
		'echo bye > bye'
		'cat hi'  		//this prints out one file
		hello

		'cat hi bye' 	//prints out both files
		hello
		bye

	4.	
		'ls -ltr'
		total 8
		-rw-r--r-- 1 mijsalerno fuse 6 2014-04-24 12:55 hi.txt
		-rw-r--r-- 1 mijsalerno fuse 4 2014-04-24 12:56 bye.txt

	5.	
		./subdir
		'pwd'
		/home/cou/cse337/students/mijsalerno/dir1/subdir

	6.	'ls -ult' if you don't want it in reverse order but
		'ls -ultr' if you do want it in reverse 

4)
	1.	
		'ls | wc'
	    151     151    1148
	    there are 151 files and folders in the /bin folder	
	    there are 1301 files and folders in the /usr/bin folder

	2.	
		'-maxdepth 1' tells find to just stay in the current directory when looking at files
		'-type d' says to only show directories
		'-print' says to print the matches on stdout followed by a newline

	3. 
		grep -Pn ".*" file | grep -P "^[5-9]\d:|^1\d\d|^2[0-4]\d:" | grep hello

		the first part numbers each line
		second part gets lines 50-249
		the third line gets all of the ones that have hello

	4.
		grep -Pn ".*" file | grep -P "^[5-9]\d:|^1\d\d|^2[0-4]\d:" | grep hello | grep -v "hello world" | wc

		this is just like the question before it but it it uses the invert match to take out all of
		the hello worlds then pipes it to word count so we can see how many matched there were

5)
	1.	
		#!/bin/bash

		cd ~
		date 	>> homecontent
		ls -l 	>> homecontent
		echo -------------------- >> homecontent
		find ~ -maxdepth 1 -type f | grep -v homecontent | xargs cat >> homecontent
		# i dont know how to get the cat of one file

		this ^^^ program uses the date command and redirects it to the homecontent file
		then it uses the ls command and redirects that.
		makes an 20 - separator
		ues the find command to find all files, uses grep to take out the homecontent file
		then cats them all into the file

	2.
		#!/bin/perl

		use strict;
		use warnings;

		my @files = `ls`;
		@files = grep(!/\.html$/, @files);

		my @count;
		my $countstr;

		foreach my $f (@files) {
			chomp($f);

			$countstr = `wc $f`;
			chomp($countstr);

			@count = split(" ", $countstr);

			if ($count[0] > 19) {
				print "$f has $count[0] lines\n"
			}
		}


		this program is written in perl, it gets the list of files in the folder
		the it uses grep to take out all of the html files.
		then it uses the wc command to get the count of the line numbers.
		it then prints out all of the files that have more than 19 lines
		to use it just run it in the directory you want it to look in and it will 
		look in there